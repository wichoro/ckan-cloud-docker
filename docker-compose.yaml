version: '3.2'

services:

  proxy:
    image: traefik:1.7.2-alpine
    restart: always
    volumes:
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    networks:
    - ckan-multi

  varnish:
    image: million12/varnish
    depends_on:
      - ckan
    volumes:
      - ./varnish:/etc/varnish
    ports:
      - "8081:80"
    networks:
    - ckan-multi

  redis:
    image: redis:alpine
    restart: always
    expose:
    - "6379"
    networks:
    - ckan-multi

  nginx:
    depends_on:
    - ckan
    image: viderum/ckan-cloud-docker:nginx-latest
    build:
      context: nginx
    restart: always
    ports:
    - "8080:8080"
    networks:
    - ckan-multi

  adminer:
    image: adminer
    restart: always
    ports:
      - 8088:8080
    networks:
    - ckan-multi

  jobs:
    depends_on:
    - ckan
    - nginx
    image: viderum/ckan-cloud-docker:ckan-latest
    command: [/ckan-entrypoint.sh, ckan-paster, --plugin=ckan, jobs, -c, /etc/ckan/production.ini, worker]
    restart: always
    volumes:
    - ./docker-compose/ckan-secrets.sh:/etc/ckan-conf/secrets/secrets.sh
    - ./docker-compose/ckan-conf-templates:/etc/ckan-conf/templates
    - ckan-data:/var/lib/ckan
    environment:
    - CKAN_STORAGE_PATH=/var/lib/ckan/data
    - CKAN_K8S_SECRETS=/etc/ckan-conf/secrets/secrets.sh
    - CKAN_K8S_TEMPLATES=/etc/ckan-conf/templates
    networks:
    - ckan-multi

  solr:
    image: viderum/ckan-cloud-docker:solr-latest
    build:
      context: solr
      args:
        SCHEMA_XML: ${SCHEMA_XML:-schema.xml}
    restart: always
    ports:
    - "8983:8983"
    volumes:
    - solr:/opt/solr/server
    networks:
    - ckan-multi

  datapusher:
    build:
      context: datapusher/
    ports:
      - "8800:8800"
    networks:
    - ckan-multi

  ckan:
    depends_on:
    - redis
    - solr
    image: viderum/ckan-cloud-docker:ckan-latest
    build:
      context: ckan
      args:
        CKAN_BRANCH: ${CKAN_BRANCH:-ckan-2.8.1}
        CKAN_REPO: ${CKAN_REPO:-ckan/ckan}
    restart: always
    volumes:
    - ./docker-compose/ckan-secrets.sh:/etc/ckan-conf/secrets/secrets.sh
    - ./docker-compose/ckan-conf-templates:/etc/ckan-conf/templates
    - ckan-data:/var/lib/ckan
    environment:
    - CKAN_STORAGE_PATH=/var/lib/ckan/data
    - CKAN_K8S_SECRETS=/etc/ckan-conf/secrets/secrets.sh
    - CKAN_K8S_TEMPLATES=/etc/ckan-conf/templates
    - GUNICORN_WORKERS=2
    ports:
    - "5000:5000"
    networks:
    - ckan-multi

  jenkins:
    image: viderum/ckan-cloud-docker:jenkins-latest
    build:
      context: jenkins
    restart: always
    volumes:
    - ./jenkins/jobs:/var/jenkins_home/jobs
    - .:/etc/ckan-cloud/ckan-cloud-docker
    - /var/run/docker.sock:/var/run/docker.sock
    - ./jenkins/scripts/docker_compose_cca_operator.sh:/etc/ckan-cloud/cca_operator.sh
    ports:
    - "8089:8080"
    networks:
    - cloud-management

  cca-operator:
    image: viderum/ckan-cloud-docker:cca-operator-latest
    build:
      context: cca-operator
    command: ./server.sh
    restart: always
    volumes:
    - /etc/ckan-cloud:/etc/ckan-cloud
    ports:
    - "8022:22"
    networks:
    - cloud-management
    - ckan-multi

  provisioning-api-db:
    image: postgres
    restart: always
    ports:
    - "5439:5432"
    environment:
    - POSTGRES_PASSWORD=123456
    volumes:
    - provisioning-api-db:/var/lib/postgresql/data
    networks:
    - cloud-management

  provisioning-api:
    depends_on:
    - provisioning-api-db
    - cca-operator
    image: viderum/ckan-cloud-provisioning-api:latest
    restart: always
    environment:
    - INSTANCE_MANAGER=root@cca-operator
    - PRIVATE_SSH_KEY
    - PRIVATE_KEY
    - PUBLIC_KEY
    - GITHUB_KEY
    - GITHUB_SECRET
    - DATABASE_URL=postgresql://postgres:123456@provisioning-api-db:5432/postgres
    - EXTERNAL_ADDRESS=http://localhost:8092
    ports:
    - "8092:8000"
    networks:
    - cloud-management

volumes:
  ckan-data:
  solr:
  provisioning-api-db:

networks:
  ckan-multi:
  cloud-management:
